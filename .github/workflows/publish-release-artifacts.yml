# This workflow runs when a GitHub release is published.
#
# It validates that the tag correctly matches the library version, and then publishes
# artifacts for the release. Currently, this includes uploading the compiled Jar to
# the GitHub release. However, it should be extended to also include PGP signing and
# uploading to Maven Central.
#
# This workflow is almost a reusable workflow that can be used by any of our Gradle/JVM
# libraries. In order to make it reusable, we need to move it to a separate repo, update
# the workflow trigger ('on') to be 'workflow_call', and define inputs for any context
# that needs to be passed in.
#
# See https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: Publish Artifacts for Release

on:
  release:
    types: [published]


jobs:
  check-tag:
    # First, a sanity check to ensure that the library version matches the release version
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: get tag version
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Get library version
        run: |
          echo "LIBRARY_VERSION=$(./gradlew properties | grep version | sed 's/version: /v/')" >> $GITHUB_ENV
      - name: Validate project version matches tag
        shell: bash
        run: |
          echo "Project Version: $PROJECT_VERSION"
          echo "Release Tag: $RELEASE_TAG"
          [ "$LIBRARY_VERSION" = "$RELEASE_TAG" ]
  publish-to-github-release:
    # only run if `check-tag` completes successfully
    needs: check-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: set env
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Upload Jar to GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # TODO - reusability
        # the location of the library(s) should be configurable as an input
        # parameter rather than being hard coded as `build/lib/ion-java...`
        # It should also be able to upload more than one file.
        run: |
          VERSION=$(./gradlew properties | grep version | sed 's/version: /v/')
          gh release upload "$RELEASE_TAG" "build/lib/ion-java-$VERSION.jar"
  # TODO: Add `publish-to-maven-central` job
